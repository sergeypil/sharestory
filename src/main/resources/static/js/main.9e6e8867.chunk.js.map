{"version":3,"sources":["actions/types.js","reducers/auth.js","reducers/message.js","reducers/index.js","store.js","services/hostname.js","services/auth.service.js","components/Login.js","actions/auth.js","components/Register.js","services/interceptor.js","services/auth-header.js","services/user.service.js","components/DisplayOnePost.js","components/DisplayPosts.js","components/SearchByPost.js","components/SortMenu.js","components/Pagination.js","components/Home.js","components/Profile.js","components/AddPost.js","components/DisplayOneComment.js","components/CommentsByPost.js","components/Post.js","components/AddTopic.js","components/Topics.js","components/PostsByUser.js","components/CommentsByUser.js","components/PostsByTopic.js","components/Navbar.js","actions/message.js","helpers/history.js","App.js","serviceWorker.js","index.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_MESSAGE","CLEAR_MESSAGE","user","JSON","parse","localStorage","getItem","initialState","isLoggedIn","combineReducers","auth","state","action","type","payload","message","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","HOSTNAME","API_URL","BASE_URL","authService","register","username","email","password","axios","post","login","then","response","data","authenticationToken","setItem","stringify","logout","refreshToken","removeItem","catch","e","console","log","Login","useForm","handleSubmit","errors","useState","setUsername","setPassword","loading","setLoading","errorMessage","setErrorMessage","useSelector","history","useHistory","location","useLocation","dispatch","useDispatch","to","className","text","xmlns","width","height","fill","viewBox","d","fillRule","onSubmit","AuthService","Promise","resolve","error","toString","reject","push","window","reload","htmlFor","name","onChange","target","value","ref","required","role","disabled","Register","setEmail","signup","pathname","maxLength","pattern","minLength","interceptors","use","originalRequest","config","status","url","_retry","res","headers","Authorization","authHeader","API_URL_POSTS","API_URL_TOPICS","API_URL_COMMENTS","API_URL_VOTES","userService","getPosts","pageNumber","pageSize","sortType","get","getPostsBySearchPostName","getPostById","id","getPostsByUsername","getPostsByTopic","topic","getTopics","getTopicById","getCommentsByPost","getCommentsByUser","addVote","voteType","postId","deletePostById","delete","deleteCommentById","commentId","addPost","postName","description","topicName","addTopic","addComment","updatePost","put","DisplayOnePost","props","setPost","isHover","setIsHover","menuDotsIsOpened","setMenuDotsIsOpened","menuDeleteIsOpened","setMenuDeleteIsOpened","menuUpdateIsOpened","setMenuUpdateIsOpened","isCurrentUserModerator","setIsCurrentUserModerator","isCurrentUserAdmin","setIsCurrentUserAdmin","currentUser","useEffect","roles","includes","postname","onClick","UserService","edited","duration","fullText","style","textIndent","onMouseEnter","onMouseLeave","undefined","substring","upVote","vote","handleClikeLikeButton","openComment","voteCount","commentCount","DisplayPosts","posts","content","setContent","notRegistered","setNotRegistered","commentsOpened","Object","values","map","SearchByPost","textSearch","setTextSearch","placeholder","search","SortMenu","isSortMenuOpen","setIsSortMenuOpen","typeDto","order","sortTypeOrder","setSortTypeOrder","handleSortButton","prev","lineHeight","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","Pagination","activeEl","setActiveEl","choosePage","i","scrollTo","aria-label","Array","totalPages","element","Home","setTotalPages","Profile","emailConfirmed","substr","length","Date","expiresAt","AddPost","setPostName","setDescription","setTopicName","postFromProps","autoFocus","defaultValue","rows","DisplayOneComment","comment","textAbove","setTextAbove","createdDate","CommentsByPost","comments","setComments","textComment","setTextComment","textRef","useRef","current","Post","setCommentsOpened","comRef","topRef","useParams","scrollIntoView","parseInt","AddTopic","Topics","handleMouseLeave","numberOfPosts","PostsByUser","CommentsByUser","refreshComments","useCallback","PostsByTopic","keys","constructor","NavBar","navCollapsed","setNavCollapsed","listen","logOut","data-target","aria-controls","createBrowserHistory","App","Navbar","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9e6e8867.chunk.js","sourcesContent":["export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\n\nexport const SET_MESSAGE = \"SET_MESSAGE\";\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from \"../actions/types\";\n\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\nconst initialState = user\n  ? { isLoggedIn: true, user }\n  : { isLoggedIn: false, user: null };\n\nexport default function authReducer(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    case REGISTER_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: true,\n        user: payload.user,\n      };\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function messageReducer(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_MESSAGE:\n      return { message: payload };\n\n    case CLEAR_MESSAGE:\n      return { message: \"\" };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport auth from \"./auth\";\nimport message from \"./message\";\n\nexport default combineReducers({\n  auth,\n  message,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","const HOSTNAME = \"192.168.1.100\";\r\nexport default HOSTNAME;","import axios from \"axios\";\nimport BASE_URL from \"./hostname\";\n\n//const BASE_URL = \"192.168.1.100\";\nconst API_URL = `http://${BASE_URL}:8080/api/auth/`;\n\nconst register = (username, email, password) => {\n  return axios.post(API_URL + \"signup\", {\n    username,\n    email,\n    password,\n  });\n};\n\nconst login = (username, password) => {\n  return axios\n    .post(API_URL + \"login\", {\n      username,\n      password,\n    })\n    .then((response) => {\n      if (response.data.authenticationToken) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n};\n\nconst logout = (user) => {\n  return axios.post(API_URL + \"logout\", {\n    refreshToken: user.refreshToken,\n    username: user.username\n  }).then(() => {\n    localStorage.removeItem(\"user\");\n  })\n    .catch((e) => {\n      console.log(e);\n      localStorage.removeItem(\"user\");\n    });\n};\n\n\nconst authService = {\n  register,\n  login,\n  logout,\n};\n\nexport default authService;\n","import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect, useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport { login } from \"../actions/auth\";\r\n\r\nconst Login = () => {\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const { message } = useSelector(state => state.message);\r\n    const { isLoggedIn } = useSelector(state => state.auth);\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onChangeUsername = (e) => {\r\n        const username = e.target.value;\r\n        setUsername(username);\r\n    };\r\n\r\n    const onChangePassword = (e) => {\r\n        const password = e.target.value;\r\n        setPassword(password);\r\n    };\r\n\r\n    const onSubmit = () => {\r\n        setLoading(true);\r\n        dispatch(login(username, password))\r\n            .then(() => {\r\n                history.push(\"/\");\r\n                window.location.reload();\r\n            })\r\n            .catch(() => {\r\n                setLoading(false);\r\n                setErrorMessage(\"Username and password do not match.\");\r\n            });\r\n    };\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to=\"/profile\" />;\r\n    }\r\n\r\n    return (<>\r\n        <div className=\"p-3\">{location.text}</div>\r\n        <div className=\"col-md-12\">\r\n            <div className=\"card card-container\">\r\n                <h3 className=\"text-center\">Log in to your account</h3>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" fill=\"gray\" className=\"bi bi-person-circle\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M13.468 12.37C12.758 11.226 11.195 10 8 10s-4.757 1.225-5.468 2.37A6.987 6.987 0 0 0 8 15a6.987 6.987 0 0 0 5.468-2.63z\" />\r\n                        <path fillRule=\"evenodd\" d=\"M8 9a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\" />\r\n                        <path fillRule=\"evenodd\" d=\"M8 1a7 7 0 1 0 0 14A7 7 0 0 0 8 1zM0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8z\" />\r\n                    </svg>\r\n                </div>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">Username</label>\r\n                        <input className=\"form-control\" type=\"text\" name=\"username\" onChange={onChangeUsername} ref={register({ required: true })} />\r\n                        {errors.username &&\r\n                            <div className=\"alert alert-danger\" role=\"alert\">\r\n                                {<span>Please enter your username</span>}\r\n                            </div>\r\n                        }\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input className=\"form-control\" type=\"password\" name=\"password\" onChange={onChangePassword} ref={register({ required: true })} />\r\n                        </div>\r\n                        {errors.password &&\r\n                            <div className=\"alert alert-danger\" role=\"alert\">\r\n                                <span>Please enter your password</span>\r\n                            </div>\r\n                        }\r\n                        {loading && (\r\n                            <span className=\"spinner-border spinner-border-sm\"></span>\r\n                        )}\r\n                        <div >\r\n                            <input className=\"btn btn-primary btn-block\" type=\"submit\" value=\"Enter\" disabled={loading} />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n                {errorMessage && (\r\n                    <div className=\"form-group\">\r\n                        <div className=\"alert alert-danger\" role=\"alert\">\r\n                            {message + \": \"}\r\n                            {errorMessage}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div >\r\n    </>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  SET_MESSAGE,\n} from \"./types\";\n\nimport AuthService from \"../services/auth.service\";\n\nexport const signup = (username, email, password) => (dispatch) => {\n  return AuthService.register(username, email, password).then(\n    (response) => {\n      dispatch({\n        type: REGISTER_SUCCESS,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: response.data.message,\n      });\n\n      return Promise.resolve();\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch({\n        type: REGISTER_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const login = (username, password) => (dispatch) => {\n  return AuthService.login(username, password).then(\n    (data) => {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: { user: data },\n      });\n\n      return Promise.resolve();\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const logout = (user) => (dispatch) => {\n  AuthService.logout(user);\n\n  dispatch({\n    type: LOGOUT,\n  });\n};\n","import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nimport { signup } from \"../actions/auth\";\r\n\r\nconst Register = () => {\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const { message } = useSelector(state => state.message);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const onChangeUsername = (e) => {\r\n        const username = e.target.value;\r\n        setUsername(username);\r\n    };\r\n\r\n    const onChangeEmail = (e) => {\r\n        const email = e.target.value;\r\n        setEmail(email);\r\n    };\r\n\r\n    const onChangePassword = (e) => {\r\n        const password = e.target.value;\r\n        setPassword(password);\r\n    };\r\n\r\n    const onSubmit = () => {\r\n        setLoading(true);\r\n        dispatch(signup(username, email, password))\r\n            .then(() => {\r\n                history.push({\r\n                    pathname: \"/login\", text: \"Registration successful. We have sent an email with a confirmation link to your email address. \" +\r\n                        \"In order to confirm your email, please click the confirmation link. \" +\r\n                        \"If you do not receive a confirmation email, please check your spam folder.\"\r\n                });\r\n            })\r\n            .catch(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"col-md-12\">\r\n            <div className=\"card card-container\">\r\n                <h3 className=\"text-center\">Create your account</h3>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" fill=\"gray\" className=\"bi bi-person-circle\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M13.468 12.37C12.758 11.226 11.195 10 8 10s-4.757 1.225-5.468 2.37A6.987 6.987 0 0 0 8 15a6.987 6.987 0 0 0 5.468-2.63z\" />\r\n                        <path fillRule=\"evenodd\" d=\"M8 9a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\" />\r\n                        <path fillRule=\"evenodd\" d=\"M8 1a7 7 0 1 0 0 14A7 7 0 0 0 8 1zM0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8z\" />\r\n                    </svg>\r\n                </div>\r\n\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">Username</label>\r\n                        <input className=\"form-control\" type=\"text\" name=\"username\" onChange={onChangeUsername}\r\n                            ref={register({ required: true, maxLength: 20 })} />\r\n                    </div>\r\n\r\n                    {errors.username && errors.username.type === \"required\" &&\r\n                        <div className=\"alert alert-danger\" role=\"alert\">\r\n                            < span> Username cannot be empty</span>\r\n                        </div>\r\n                    }\r\n                    {errors.username && errors.username.type === \"maxLength\" &&\r\n                        <div className=\"alert alert-danger\" role=\"alert\">\r\n                            < span > Username must not contain more than 20 characters</span>\r\n                        </div>\r\n                    }\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input className=\"form-control\" type=\"email\" name=\"email\" onChange={onChangeEmail}\r\n                            ref={register({\r\n                                required: \"required\",\r\n                                pattern: {\r\n                                    value: /^(([^<>()[\\],;:\\s@]+(\\.[^<>()[\\],;:\\s@]+)*)|(.+))@(([^<>()[\\],;:\\s@]+\\.)+[^<>()[\\],;:\\s@]{2,})$/i,\r\n                                    ///^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\r\n                                }\r\n                            })} />\r\n                    </div>\r\n\r\n                    {errors.email && errors.email.type === \"required\" &&\r\n                        <div className=\"alert alert-danger\" role=\"alert\">\r\n                            <span>Email cannot be empty</span>\r\n                        </div>\r\n                    }\r\n                    {errors.email && errors.email.type === \"pattern\" &&\r\n                        <div className=\"alert alert-danger\" role=\"alert\">\r\n                            <span>Entered value does not match email format</span>\r\n                        </div>\r\n                    }\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input className=\"form-control\" type=\"password\" name=\"password\" onChange={onChangePassword}\r\n                            ref={register({ required: true, minLength: 3, maxLength: 255 })} />\r\n                    </div>\r\n\r\n                    {errors.password && errors.password.type === \"required\" &&\r\n                        <div className=\"alert alert-danger\" role=\"alert\">\r\n                            <span>Password cannot be empty</span>\r\n                        </div>\r\n                    }\r\n                    {errors.password && errors.password.type === \"minLength\" &&\r\n                        <div className=\"alert alert-danger\" role=\"alert\">\r\n                            < span > Password must have at least 3 characters</span>\r\n                        </div>\r\n                    }\r\n                    {loading && (\r\n                        <span className=\"spinner-border spinner-border-sm\"></span>\r\n                    )}\r\n                    <div >\r\n                        <input className=\"btn btn-primary btn-block\" type=\"submit\" value=\"Create account\" disabled={loading} />\r\n                    </div>\r\n                </form >\r\n                {message && (\r\n                    <div className=\"form-group\">\r\n                        <div className=\"alert alert-danger\" role=\"alert\">\r\n                            {message}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div >\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default Register;\r\n","import axios from \"axios\";\r\nimport BASE_URL from \"./hostname\";\r\n\r\n//const BASE_URL = \"192.168.1.100\";\r\n\r\nconst user = JSON.parse(localStorage.getItem(\"user\"));\r\naxios.interceptors.response.use((response) => {\r\n    return response;\r\n}, (error) => {\r\n    const originalRequest = error.config;\r\n    if (error.response && error.response.status === 401 && originalRequest.url === `http://${BASE_URL}:8080/api/auth/refresh/token`) {\r\n        return Promise.reject(error);\r\n    }\r\n    if (error.response && error.response.status === 401 && !originalRequest._retry && originalRequest.url\r\n        !== `http://${BASE_URL}:8080/api/auth/login` && user) {\r\n        originalRequest._retry = true;\r\n        axios.post(`http://${BASE_URL}:8080/api/auth/refresh/token`,\r\n            {\r\n                \"refreshToken\": user.refreshToken,\r\n                \"username\": user.username\r\n            }).then(res => {\r\n                if (res.status === 200) {\r\n                    localStorage.setItem(\"user\", JSON.stringify(res.data));\r\n                    // axios.defaults.headers.common['Authorization'] = 'Bearer ' +\r\n                    //     res.data.authenticationToken;\r\n                    originalRequest.headers.Authorization = 'Bearer ' +\r\n                        res.data.authenticationToken;\r\n                    return axios(originalRequest).then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                }\r\n            });\r\n    }\r\n    return Promise.reject(error);\r\n});\r\n\r\nexport default axios;","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  if (user && user.authenticationToken) {\n    return { Authorization: \"Bearer \" + user.authenticationToken };\n  } else {\n    return {};\n  }\n}\n","//import axios from \"axios\";\nimport axios from \"./interceptor\";\nimport authHeader from \"./auth-header\";\nimport BASE_URL from \"./hostname\";\n\n//const BASE_URL = \"192.168.1.100\";\nconst API_URL_POSTS = `http://${BASE_URL}:8080/api/posts`;\nconst API_URL_TOPICS = `http://${BASE_URL}:8080/api/topic`;\nconst API_URL_COMMENTS = `http://${BASE_URL}:8080/api/comments`;\nconst API_URL_VOTES = `http://${BASE_URL}:8080/api/votes`;\n\n\nconst getPosts = (pageNumber = 0, pageSize = 5, sortType = \"createdDate,desc\") => {\n  console.log(\"call api getPosts\");\n  return axios.get(API_URL_POSTS + \"?page=\" + pageNumber + \"&size=\" + pageSize + \"&sort=\" + sortType, { headers: authHeader() });\n\n};\n\nconst getPostsBySearchPostName = (name, pageNumber = 0, pageSize = 3) => {\n  if (name) return axios.get(API_URL_POSTS + \"?name=\" + name + \"&page=\" + pageNumber + \"&size=\" + pageSize, { headers: authHeader() });\n  return axios.get(API_URL_POSTS + \"?page=\" + pageNumber + \"&size=\" + pageSize, { headers: authHeader() });\n\n};\n\nconst getPostById = (id) => {\n  return axios.get(API_URL_POSTS + \"/\" + id, { headers: authHeader() });\n};\nconst getPostsByUsername = (username) => {\n  return axios.get(API_URL_POSTS + \"/by-user/\" + username, { headers: authHeader() });\n};\nconst getPostsByTopic = (topic) => {\n  return axios.get(API_URL_POSTS + \"/by-topic/\" + topic, { headers: authHeader() });\n};\nconst getTopics = () => {\n  return axios.get(API_URL_TOPICS, { headers: authHeader() });\n};\n\nconst getTopicById = (id) => {\n  return axios.get(API_URL_TOPICS + \"/\" + id, { headers: authHeader() });\n};\n\nconst getCommentsByPost = (id) => {\n  return axios.get(API_URL_COMMENTS + \"/by-post/\" + id, { headers: authHeader() });\n};\n\nconst getCommentsByUser = (username) => {\n  return axios.get(API_URL_COMMENTS + \"/by-user/\" + username, { headers: authHeader() });\n};\n\nconst addVote = (voteType, postId) => {\n  return axios.post(API_URL_VOTES, {\n    voteType,\n    postId,\n  }, { headers: authHeader() });\n};\n\nconst deletePostById = (postId) => {\n  return axios.delete(API_URL_POSTS + \"/\" + postId, { headers: authHeader() });\n};\n\nconst deleteCommentById = (commentId) => {\n  return axios.delete(API_URL_COMMENTS + \"/\" + commentId, { headers: authHeader() });\n};\n\nconst addPost = (postName, description, topicName) => {\n  return axios.post(API_URL_POSTS, {\n    postName,\n    description,\n    topicName,\n  }, { headers: authHeader() });\n};\nconst addTopic = (name, description) => {\n  return axios.post(API_URL_TOPICS, {\n    name,\n    description,\n  }, { headers: authHeader() });\n};\nconst addComment = (postId, text) => {\n  return axios.post(API_URL_COMMENTS, {\n    postId,\n    text\n  }, { headers: authHeader() });\n};\nconst updatePost = (postId, postName, description, topicName) => {\n  return axios.put(API_URL_POSTS, {\n    postId,\n    postName,\n    description,\n    topicName,\n  }, { headers: authHeader() });\n};\n\nconst userService = {\n  getPosts,\n  getPostsBySearchPostName,\n  getPostById,\n  getPostsByUsername,\n  getPostsByTopic,\n  getTopics,\n  getTopicById,\n  getCommentsByPost,\n  getCommentsByUser,\n  addVote,\n  deletePostById,\n  deleteCommentById,\n  addPost,\n  addTopic,\n  addComment,\n  updatePost\n};\n\nexport default userService;","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./DisplayOnePost.css\";\r\nimport UserService from \"../services/user.service\";\r\n\r\nconst DisplayOnePost = (props) => {\r\n    const [post, setPost] = useState({ ...props.post });\r\n    const [isHover, setIsHover] = useState(\"\");\r\n    const [menuDotsIsOpened, setMenuDotsIsOpened] = useState(false);\r\n    const [menuDeleteIsOpened, setMenuDeleteIsOpened] = useState(false);\r\n    const [menuUpdateIsOpened, setMenuUpdateIsOpened] = useState(false);\r\n    const [isCurrentUserModerator, setIsCurrentUserModerator] = useState(false);\r\n    const [isCurrentUserAdmin, setIsCurrentUserAdmin] = useState(false);\r\n\r\n    const { user: currentUser } = useSelector((state) => state.auth);\r\n\r\n    useEffect(() => {\r\n        setPost(props.post);\r\n    }, [props.post]);\r\n\r\n    const handleMouseEnter = (id) => {\r\n        setIsHover(id);\r\n    };\r\n    const handleMouseLeave = () => {\r\n        setIsHover(undefined);\r\n    };\r\n    const handleClikeLikeButton = (upVote, postId) => {\r\n        const vote = upVote ? \"DOWNVOTE\" : \"UPVOTE\";\r\n        UserService.addVote(vote, postId).then(\r\n            () => {\r\n                console.log(\"edit\");\r\n                UserService.getPostById(postId).then(\r\n                    (response) => {\r\n                        const post = response.data;\r\n                        setPost(post);\r\n                    }\r\n                );\r\n            });\r\n    };\r\n    const handleClikeDeleteButton = (postId) => {\r\n        UserService.deletePostById(postId).then(\r\n            window.location.reload()\r\n        );\r\n    };\r\n\r\n    const handleClikeCommentButton = (postId) => {\r\n        props.openComment(postId);\r\n    };\r\n\r\n    useEffect(() => {\r\n        currentUser && setIsCurrentUserModerator(currentUser.roles.includes(\"ROLE_MODERATOR\"));\r\n        currentUser && setIsCurrentUserAdmin(currentUser.roles.includes(\"ROLE_ADMIN\"));\r\n    }, [currentUser]);\r\n\r\n    return (\r\n        <div className=\"relative\">\r\n            {menuDeleteIsOpened &&\r\n                <div className=\"bg-white border absolute confirm-window\">\r\n                    <div className=\"bg-primary rounded p-3 text-center font-weight-bold\">\r\n                        Attention!\r\n                    </div>\r\n                    {(currentUser && currentUser.username === post.username) || isCurrentUserAdmin ?\r\n                        <div className=\"bg-white p-3 text-center\">\r\n                            Do you really want to delete post {post.postname} ?\r\n                        <div className=\"p-3\">\r\n                                <div className=\"bg-danger rounded float-left pointer\"\r\n                                    onClick={() => handleClikeDeleteButton(post.id)}>Yes</div>\r\n                                <div className=\"bg-primary rounded pl-1 pr-1 float-right pointer\"\r\n                                    onClick={() => setMenuDeleteIsOpened(!menuDeleteIsOpened)}>No</div>\r\n                            </div>\r\n                        </div> :\r\n                        <div className=\"text-center\">\r\n                            <div className=\" rounded p-1 text-center\">Only author of the post or admin can delete it!</div>\r\n                            <div className=\"border border-dark bg-primary rounded text-center d-inline pl-3 pr-3 pointer\"\r\n                                onClick={() => setMenuDeleteIsOpened(!menuDeleteIsOpened)}>ok\r\n                            </div>\r\n                        </div>}\r\n                </div>}\r\n            {menuUpdateIsOpened &&\r\n                <div className=\"bg-white border absolute confirm-window\">\r\n                    <div className=\"bg-primary rounded p-3 text-center font-weight-bold\">\r\n                        Attention!\r\n                    </div>\r\n                    {(currentUser && currentUser.username === post.username) || isCurrentUserModerator || isCurrentUserAdmin ?\r\n                        <div className=\"bg-white p-3 text-center\">\r\n                            Do you really want to edit post {post.postName} ?\r\n                        <div className=\"p-3\">\r\n                                <Link to={{ pathname: \"/AddPost\", post: post }}>\r\n                                    <div className=\"bg-danger text-dark rounded float-left pointer\">\r\n                                        Yes</div>\r\n                                </Link>\r\n                                <div className=\"bg-primary rounded pl-1 pr-1 float-right pointer\"\r\n                                    onClick={() => setMenuUpdateIsOpened(!menuUpdateIsOpened)}>No</div>\r\n                            </div>\r\n                        </div> :\r\n                        <div className=\"text-center\">\r\n                            <div className=\" rounded p-1 text-center\">Only author of the post or moderator can edit it!</div>\r\n                            <div className=\"border border-dark bg-primary rounded text-center d-inline pl-3 pr-3 pointer\"\r\n                                onClick={() => setMenuUpdateIsOpened(!menuUpdateIsOpened)}>ok\r\n                            </div>\r\n                        </div>}\r\n                </div>}\r\n            <div className=\"\">\r\n                <Link to={\"/Posts/\" + post.id}\r\n                    className=\"ml-1 h4 font-weight-bold text-dark\">\r\n                    <span className=\"\">{post.postName}</span>\r\n                </Link>\r\n                {post.edited && <span className=\"font-italic\"> (Edited)</span>}\r\n                <span className=\"ml-2 font-italic\">posted by</span>\r\n                <Link to={\"/\" + post.username + \"/posts\"} className=\"text-dark\">\r\n                    <span className=\"ml-1 font-italic font-weight-bold\">{post.username}</span>\r\n                </Link>\r\n                <span className=\"ml-auto font-italic text-muted mt-0 mr-0\"> {post.duration}</span>\r\n                <div className=\"float-right relative pointer\" onClick={() => setMenuDotsIsOpened(!menuDotsIsOpened)}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-three-dots\" viewBox=\"0 0 16 16\">\r\n                        <path fillRule=\"evenodd\" d=\"M3 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z\" />\r\n                    </svg>\r\n                    {menuDotsIsOpened && <div className=\"absolute menu-dots-location\">\r\n                        <div className=\"border border-white p-3 bg-dark text-white rounded text-center\"\r\n                            onClick={() => setMenuUpdateIsOpened(!menuUpdateIsOpened)}>Edit</div>\r\n                        <div className=\"border border-white p-3 bg-dark text-white rounded text-center\"\r\n                            onClick={() => setMenuDeleteIsOpened(!menuDeleteIsOpened)}>Delete</div>\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n            <div className=\"ml-2 \">\r\n                <Link to={\"/topic/\" + post.topicName + \"/posts\"} className=\"text-dark\">\r\n                    <span className=\"ml-0  font-italic\">{post.topicName}</span>\r\n                </Link>\r\n\r\n            </div>\r\n            {\r\n                props.fullText ?\r\n                    <div style={{ textIndent: 9 }} className=\"bg-light ml-0 p-2 rounded text-indent-9\">\r\n                        {post.description}\r\n                    </div> :\r\n                    <div style={{ textIndent: 9 }} className=\"bg-light ml-0 p-2 rounded text-indent-9\" onMouseEnter={() => handleMouseEnter(post.id)}\r\n                        onMouseLeave={handleMouseLeave} >\r\n                        {isHover === post.id ? post.description && post.description.substring(0, 900) + \"...\"\r\n                            : post.description && post.description.substring(0, 500) + \"...\"}\r\n                    </div>\r\n            }\r\n\r\n            <span className=\"ml-1 pointer\" onClick={() => handleClikeLikeButton(post.upVote, post.id)}>\r\n                {post.upVote ? (<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"red\" className=\"bi bi-heart-fill\" viewBox=\"0 0 16 16\">\r\n                    <path fillRule=\"evenodd\" d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\" />\r\n                </svg>) :\r\n                    (<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"red\" className=\"bi bi-heart\" viewBox=\"0 0 16 16\">\r\n                        <path fillRule=\"evenodd\" d=\"M8 2.748l-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z\" />\r\n                    </svg>)\r\n                }\r\n            </span>\r\n            <span className=\"ml-4 pointer\" onClick={() => handleClikeCommentButton(post.id)}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"DodgerBlue\" className=\"bi bi-chat-right-dots\" viewBox=\"0 0 16 16\">\r\n                    <path fillRule=\"evenodd\" d=\"M2 1h12a1 1 0 0 1 1 1v11.586l-2-2A2 2 0 0 0 11.586 11H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zm12-1a2 2 0 0 1 2 2v12.793a.5.5 0 0 1-.854.353l-2.853-2.853a1 1 0 0 0-.707-.293H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h12z\" />\r\n                    <path d=\"M5 6a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\" />\r\n                </svg>\r\n            </span>\r\n            <div>\r\n                <span className=\"ml-1\">{post.voteCount + (post.voteCount === 1 ? \" like\" : \" likes\")}</span>\r\n                <span className=\"ml-1\">{post.commentCount + (post.commentCount === 1 ? \"  comment\" : \" comments\")}</span>\r\n            </div>\r\n            <hr className=\"bg-blue\"></hr>\r\n        </div >\r\n    );\r\n};\r\n\r\nDisplayOnePost.propTypes = {\r\n    post: PropTypes.object,\r\n    fullText: PropTypes.bool,\r\n    openComment: PropTypes.func\r\n};\r\n\r\nexport default DisplayOnePost;","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./DisplayPosts.css\";\r\nimport DisplayOnePost from \"./DisplayOnePost\";\r\n\r\nconst DisplayPosts = (props) => {\r\n    const [content, setContent] = useState({ ...props.posts });\r\n    const [notRegistered, setNotRegistered] = useState(false);\r\n\r\n    const { user: currentUser } = useSelector((state) => state.auth);\r\n\r\n    let history = useHistory();\r\n    useEffect(() => {\r\n        setContent(props.posts);\r\n    }, [props.posts]);\r\n\r\n    const openComment = (postId) => {\r\n        history.push({ pathname: `/posts/${postId}`, commentsOpened: true });\r\n        //window.location.reload();\r\n    };\r\n\r\n    const handleClikeAppPostButton = () => {\r\n        currentUser ?\r\n            history.push(\"/addPost\")\r\n            : setNotRegistered(true);\r\n    };\r\n\r\n    const handleClikeAppTopicButton = () => {\r\n        currentUser ?\r\n            history.push(\"/addTopic\")\r\n            : setNotRegistered(true);\r\n    };\r\n\r\n    return (\r\n        <div className=\"mt-0 pb-2 relative\">\r\n            <div className=\"d-flex pb-1\">\r\n                <div className=\"d-flex bg-dark text-light ml-1 p-2 rounded float-left pointer\"\r\n                    onClick={handleClikeAppPostButton}>\r\n                    Add new post\r\n                </div>\r\n                <div className=\"ml-auto mr-3 bg-dark text-light ml-1 p-2 rounded pointer\"\r\n                    onClick={handleClikeAppTopicButton}>\r\n                    Add new topic\r\n                </div>\r\n\r\n            </div>\r\n            {\r\n                Object.values(content).map((post) => {\r\n                    return (\r\n                        <DisplayOnePost post={post} fullText={false} openComment={openComment} key={post.id} />\r\n\r\n                    );\r\n                })\r\n            }\r\n            <div className=\"\">\r\n                {notRegistered &&\r\n                    <div className=\"bg-white border absolute not-registered-window\">\r\n                        <div className=\"bg-primary rounded p-3 text-center font-weight-bold\">\r\n                            Attention!\r\n                    </div>\r\n                        <div className=\"text-center\">\r\n                            <div className=\" rounded p-1 text-center\">First sign up or log in!</div>\r\n                            <div className=\"border border-dark bg-primary rounded text-center d-inline pl-3 pr-3 pointer\"\r\n                                onClick={() => setNotRegistered(!notRegistered)}>ok\r\n                        </div>\r\n                        </div>\r\n                    </div>}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nDisplayPosts.propTypes = {\r\n    posts: PropTypes.array,\r\n};\r\n\r\nexport default DisplayPosts;","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./SearchByPost.css\";\r\n\r\nconst SearchByPost = (props) => {\r\n    const [textSearch, setTextSearch] = useState(\"\");\r\n    const onChangeTextSearch = (e) => {\r\n        const textSearch = e.target.value;\r\n        setTextSearch(textSearch);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <input className=\"p-1 mt-2 mb-2 ml-1 max-width-35\" type=\"text\" value={textSearch}\r\n                placeholder=\"post name\" onChange={onChangeTextSearch} />\r\n            <div className=\" bg-dark text-light ml-1 mt-2 p-1 rounded pointer align-start\"\r\n                onClick={() => props.search(textSearch)}>Search\r\n                </div>\r\n        </>\r\n    );\r\n};\r\n\r\nSearchByPost.propTypes = {\r\n    search: PropTypes.func,\r\n};\r\n\r\nexport default SearchByPost;","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SortMenu = (props) => {\r\n    const [isSortMenuOpen, setIsSortMenuOpen] = useState(false);\r\n    const [sortTypeOrder, setSortTypeOrder] = useState({ type: \"Date\", typeDto: \"createdDate\", order: \"desc\" });\r\n    const getPosts = props.getPosts;\r\n\r\n    const handleSortButton = (type) => {\r\n        if (type === sortTypeOrder.type) {\r\n            sortTypeOrder.order === \"asc\" ?\r\n                setSortTypeOrder((prev) => ({ ...prev, order: \"desc\" })) :\r\n                setSortTypeOrder((prev) => ({ ...prev, order: \"asc\" }));\r\n        }\r\n        else if (type === \"Date\") {\r\n            setSortTypeOrder({ type: \"Date\", typeDto: \"createdDate\", order: \"desc\" });\r\n        }\r\n        else if (type === \"Likes\") {\r\n            setSortTypeOrder({ type: \"Likes\", typeDto: \"voteCount\", order: \"desc\" });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getPosts(0, `${sortTypeOrder.typeDto},${sortTypeOrder.order}`);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [sortTypeOrder]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"pt-3 ml-auto\">Sort by</div>\r\n            <div className=\"dropdown pt-2 mr-3 ml-1\" onClick={() => setIsSortMenuOpen(!isSortMenuOpen)}>\r\n                <button className=\"btn btn-dark dropdown-toggle height-33\" type=\"button\" id=\"dropdownMenuButton\" style={{ height: \"33px\", lineHeight: \"20px\" }}\r\n                    data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    {sortTypeOrder.type}\r\n                </button>\r\n                <div className={`dropdown-menu${isSortMenuOpen ? \" show\" : \"\"}`} aria-labelledby=\"dropdownMenuButton\">\r\n                    <span className=\"dropdown-item text-dark pointer\" onClick={() => handleSortButton(\"Date\")}>Date</span>\r\n                    <span className=\"dropdown-item text-dark pointer\" onClick={() => handleSortButton(\"Likes\")}>Likes</span>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nSortMenu.propTypes = {\r\n    getPosts: PropTypes.func,\r\n};\r\n\r\nexport default SortMenu;","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Pagination = (props) => {\r\n    const [activeEl, setActiveEl] = useState(0);\r\n\r\n    const choosePage = (i) => {\r\n        setActiveEl(i);\r\n        window.scrollTo(0, 0);\r\n        props.getPosts(i);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <nav aria-label=\"Pagination 2\">\r\n                <ul className=\"pagination justify-content-center\">\r\n                    <li className={activeEl === 0 ? \"page-item disabled pointer\" : \"page-item pointer\"}>\r\n                        <span className=\"page-link\" onClick={() => setActiveEl(prev => choosePage(prev - 1))}>Previous</span>\r\n                    </li>\r\n                    {[...Array(props.totalPages)].map((element, i) => {\r\n                        return (\r\n                            <li className={i === activeEl ? \"page-item active pointer\" : \"page-item pointer\"} key={i}>\r\n                                <span className=\"page-link\"\r\n                                    onClick={() => choosePage(i)}>{i}</span></li>\r\n                        );\r\n                    })\r\n                    }\r\n                    <li className={props.totalPages - 1 === activeEl ? \"page-item disabled pointer\" : \"page-item pointer\"}>\r\n                        <span className=\"page-link\" onClick={() => setActiveEl(prev => choosePage(prev + 1))}>Next</span>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nPagination.propTypes = {\r\n    totalPages: PropTypes.number,\r\n    getPosts: PropTypes.func\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useState } from \"react\";\n\nimport DisplayPosts from \"./DisplayPosts\";\nimport SearchByPost from \"./SearchByPost\";\nimport SortMenu from \"./SortMenu\";\nimport Pagination from \"./Pagination\";\n\nimport UserService from \"../services/user.service\";\n\nconst Home = () => {\n  const [content, setContent] = useState([]);\n  const [totalPages, setTotalPages] = useState(0);\n  const pageSize = 5;\n\n  const getPosts = (pageNumber, sortType) => {\n    UserService.getPosts(pageNumber, pageSize, sortType)\n      .then(response => {\n        setContent(response.data.content);\n        setTotalPages(response.data.totalPages);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n  const search = (name) => {\n    UserService.getPostsBySearchPostName(name)\n      .then((response) => {\n        setContent(response.data.content);\n        setTotalPages(response.data.totalPages);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  return (\n    <>\n      <div className=\"d-flex\">\n        <SearchByPost search={search} />\n        <SortMenu getPosts={getPosts} />\n      </div>\n      <DisplayPosts posts={content} />\n      <Pagination totalPages={totalPages} getPosts={getPosts} />\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\n\nimport { Link } from \"react-router-dom\";\n\nconst Profile = () => {\n  const { user: currentUser } = useSelector((state) => state.auth);\n\n  if (!currentUser) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <div className=\"container\">\n\n\n      <header className=\"jumbotron\">\n        <h3>Profile of user:\n          <span className=\"font-weight-bold\"> {currentUser.username}</span>\n          <p className=\"font-italic\">\n            {currentUser.emailConfirmed ? \" (Email address is confirmed)\" : \" (Email address is not confirmed)\"}\n          </p>\n        </h3>\n      </header>\n\n      <div>\n        <Link to={\"/\" + currentUser.username + \"/posts\"} className=\"text-dark\">\n          <div className=\"p-3 h3 bg-primary rounded font-weight-bold\">Click here to see list of your posts</div>\n        </Link>\n      </div>\n      <div>\n        <Link to={\"/\" + currentUser.username + \"/comments\"} className=\"text-dark\">\n          <div className=\"p-3 h3 bg-secondary rounded font-weight-bold\">Click here to see list of your comments</div>\n        </Link>\n      </div>\n      <p>\n        <strong>Token:</strong> {currentUser.authenticationToken.substring(0, 20)} ...{\" \"}\n        {currentUser.authenticationToken.substr(currentUser.authenticationToken.length - 20)}\n      </p>\n      <p>\n        <strong>username:</strong> {currentUser.username}\n      </p>\n      <p>\n        <strong>Expired:</strong> {(new Date(1000 * currentUser.expiresAt)).toString()}\n      </p>\n      {/* <strong>Authorities:</strong>\n      <ul>\n        {currentUser.roles &&\n          currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n      </ul> */}\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport UserService from \"../services/user.service\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nconst AddPost = () => {\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n\r\n    const [postName, setPostName] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [topicName, setTopicName] = useState(\"\");\r\n\r\n    const [content, setContent] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [postFromProps] = useState(location.post);\r\n    const [errorMessage, setErrorMessage] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        content && setTopicName(Object.values(content)[0].name);\r\n    }, [content]);\r\n\r\n    useEffect(() => {\r\n        UserService.getTopics()\r\n            .then((response) => {\r\n                response.data.length !== 0 ? setContent(response.data) :\r\n                    setErrorMessage(true);\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n            });\r\n    }, []);\r\n\r\n    const onChangePostName = (e) => {\r\n        const postName = e.target.value;\r\n        setPostName(postName);\r\n    };\r\n\r\n    const onChangeDescription = (e) => {\r\n        const description = e.target.value;\r\n        setDescription(description);\r\n    };\r\n\r\n    const onChangeTopicName = (e) => {\r\n        const topicName = e.target.value;\r\n        setTopicName(topicName);\r\n    };\r\n\r\n    const onSubmit = () => {\r\n        setLoading(true);\r\n        postFromProps ?\r\n            UserService.updatePost(postFromProps.id, postName || postFromProps.postName, description || postFromProps.description,\r\n                topicName || postFromProps.topicName).then(() => {\r\n                    history.push(\"/\");\r\n                    window.location.reload();\r\n                })\r\n            :\r\n            UserService.addPost(postName, description, topicName).then(() => {\r\n                history.push(\"/\");\r\n                window.location.reload();\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container h-100 w-auto pb-3 \">\r\n            {content && <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"form-group \">\r\n                    <label htmlFor=\"postName\">Name of post</label>\r\n                    <input className=\"form-control\" type=\"text\" name=\"postName\" autoFocus defaultValue={postFromProps && postFromProps.postName}\r\n                        onChange={onChangePostName} ref={register({ required: true, maxLength: 35 })} />\r\n                </div>\r\n                {errors.postName && errors.postName.type === \"required\" &&\r\n                    <div className=\"alert alert-danger\" role=\"alert\">\r\n                        < span> Name of post cannot be empty</span>\r\n                    </div>\r\n                }\r\n                {errors.username && errors.username.type === \"maxLength\" &&\r\n                    <div className=\"alert alert-danger\" role=\"alert\">\r\n                        < span > Name of post must not contain more than 35 characters</span>\r\n                    </div>\r\n                }\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"topicName\">Name of topic</label>\r\n                    <select defaultValue={postFromProps && postFromProps.topicName}\r\n                        name=\"topicName\" onChange={onChangeTopicName}>\r\n                        {content.map((topic) => {\r\n                            return (\r\n                                <option value={topic.name}\r\n                                    key={topic.id}>{topic.name}</option>);\r\n                        }\r\n                        )}\r\n\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"description\">Description</label>\r\n                    <textarea className=\"form-control h-100\" type=\"textarea\" name=\"description\"\r\n                        defaultValue={postFromProps && postFromProps.description} onChange={onChangeDescription}\r\n                        rows=\"15\" ref={register({ required: true })} />\r\n                </div>\r\n\r\n                {errors.description && errors.description.type === \"required\" &&\r\n                    <div className=\"alert alert-danger\" role=\"alert\">\r\n                        < span> Description cannot be empty</span>\r\n                    </div>\r\n                }\r\n\r\n                <div >\r\n                    <input className=\"btn btn-primary btn-block\" type=\"submit\" value=\"send\" disabled={loading} />\r\n                </div>\r\n            </form >}\r\n            {errorMessage &&\r\n                <div>\r\n                    <div className=\"alert alert-danger\" role=\"alert\">\r\n                        Please add topic at first.\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div >\r\n\r\n    );\r\n};\r\n\r\nexport default AddPost;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./DisplayOneComment.css\";\r\nimport UserService from \"../services/user.service\";\r\n\r\nconst DisplayOneComment = (props) => {\r\n    const [comment, setContent] = useState({ ...props.comment });\r\n    const [textAbove, setTextAbove] = useState(false);\r\n    const [menuDotsIsOpened, setMenuDotsIsOpened] = useState(false);\r\n    const [menuDeleteIsOpened, setMenuDeleteIsOpened] = useState(false);\r\n    const [isCurrentUserAdmin, setIsCurrentUserAdmin] = useState(false);\r\n\r\n    const { user: currentUser } = useSelector((state) => state.auth);\r\n\r\n    useEffect(() => {\r\n        setContent(props.comment);\r\n    }, [props.comment]);\r\n\r\n    useEffect(() => {\r\n        setTextAbove(props.textAbove);\r\n    }, [props.textAbove]);\r\n\r\n    const handleClikeDeleteButton = (commentId, postId) => {\r\n        UserService.deleteCommentById(commentId)\r\n            .then(() => {\r\n                props.openComment(postId);\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n            });\r\n    };\r\n    useEffect(() => {\r\n        currentUser && setIsCurrentUserAdmin(currentUser.roles.includes(\"ROLE_ADMIN\"));\r\n    }, [currentUser]);\r\n\r\n    return (\r\n        <div className=\"relative bg-white pl-3\">\r\n            {menuDeleteIsOpened &&\r\n                <div className=\"bg-white border absolute indent\">\r\n                    <div className=\"bg-primary rounded p-3 text-center font-weight-bold\">\r\n                        Attention!\r\n                    </div>\r\n                    {(currentUser && currentUser.username === comment.username) || isCurrentUserAdmin ?\r\n                        <div className=\"bg-white p-3 text-center\">\r\n                            Do you really want to delete comment?\r\n                        <div className=\"p-3\">\r\n                                <div className=\"bg-danger rounded float-left pointer\"\r\n                                    onClick={() => handleClikeDeleteButton(comment.id, comment.postId)}>Yes</div>\r\n                                <div className=\"bg-primary rounded pl-1 pr-1 float-right pointer\"\r\n                                    onClick={() => setMenuDeleteIsOpened(!menuDeleteIsOpened)}>No</div>\r\n                            </div>\r\n                        </div> :\r\n                        <div className=\"text-center\">\r\n                            <div className=\" rounded p-1 text-center\">Only author of the comment or admin can delete it!</div>\r\n                            <div className=\"border border-dark bg-primary rounded text-center d-inline pl-3 pr-3 pointer\"\r\n                                onClick={() => setMenuDeleteIsOpened(!menuDeleteIsOpened)}>ok\r\n                            </div>\r\n                        </div>}\r\n                </div>}\r\n\r\n            {textAbove && <div className=\"pt-3\">\r\n                <Link to={\"/Posts/\" + comment.postId}\r\n                    className=\"ml-auto p-1 bg-secondary rounded text-dark\">\r\n                    Comment to\r\n                </Link>\r\n            </div>}\r\n            <div className=\"d-flex pt-2 bg-weith content-comment\" >\r\n                <div className=\"bg-light rounded\" id=\"width-90\" >\r\n                    <div className=\"text-center\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"gray\" className=\"bi bi-person-circle\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M13.468 12.37C12.758 11.226 11.195 10 8 10s-4.757 1.225-5.468 2.37A6.987 6.987 0 0 0 8 15a6.987 6.987 0 0 0 5.468-2.63z\" />\r\n                            <path fillRule=\"evenodd\" d=\"M8 9a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\" />\r\n                            <path fillRule=\"evenodd\" d=\"M8 1a7 7 0 1 0 0 14A7 7 0 0 0 8 1zM0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8z\" />\r\n                        </svg>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                        <div className=\"ml-0 font-weight-bold\">{comment.username}</div>\r\n                        <div className=\"ml-0 h5 small font-italic bg-light rounded\">{comment.createdDate}</div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"ml-3  align-self-center\" >{comment.text}</div>\r\n                <div className=\"ml-auto mr-3 relative pointer\" onClick={() => setMenuDotsIsOpened(!menuDotsIsOpened)}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-three-dots\" viewBox=\"0 0 16 16\">\r\n                        <path fillRule=\"evenodd\" d=\"M3 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z\" />\r\n                    </svg>\r\n                    {menuDotsIsOpened && <div className=\"absolute\" id=\"size-menu-dots\">\r\n                        {/* <div className=\"border border-white p-3 bg-dark text-white rounded text-center\"\r\n                            onClick={() => setMenuUpdateIsOpened(!menuUpdateIsOpened)}>Edit</div> */}\r\n                        <div className=\"border border-white p-3 bg-dark text-white rounded text-center\" id=\"word-break-normal\"\r\n                            onClick={() => setMenuDeleteIsOpened(!menuDeleteIsOpened)}>Delete</div>\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n\r\n            <hr className=\"\"></hr>\r\n        </div>\r\n    );\r\n};\r\n\r\nDisplayOneComment.propTypes = {\r\n    comment: PropTypes.object,\r\n    textAbove: PropTypes.bool,\r\n    openComment: PropTypes.func\r\n};\r\n\r\n\r\nexport default DisplayOneComment;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport DisplayOneComment from \"./DisplayOneComment\";\r\nimport UserService from \"../services/user.service\";\r\n\r\nconst CommentsByPost = (props) => {\r\n    const { handleSubmit } = useForm();\r\n\r\n    const [comments, setComments] = useState(props.comments);\r\n    const [textComment, setTextComment] = useState(\"\");\r\n    const [postId] = useState(props.postId);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const textRef = useRef();\r\n    useEffect(() => {\r\n        setComments(props.comments);\r\n    }, [props.comments]);\r\n\r\n    const onChangeTextComment = (e) => {\r\n        const textComment = e.target.value;\r\n        setTextComment(textComment);\r\n    };\r\n\r\n    const onSubmit = () => {\r\n        setLoading(true);\r\n        UserService.addComment(postId, textComment)\r\n            .then(() => {\r\n                setTextComment(\"\");\r\n                textRef.current.value = \"\";\r\n                props.openComment(postId);\r\n                setLoading(false);\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"\" >\r\n            <div className=\"pb-2\">\r\n                Comments\r\n            </div>\r\n            {Object.values(comments).map((comment) =>\r\n                <DisplayOneComment comment={comment} openComment={props.openComment} key={comment.id}></DisplayOneComment>\r\n            )}\r\n            <form className=\"pb-3\" onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"textComment\">Leave a comment</label>\r\n                    <textarea className=\"form-control\" type=\"textarea\" name=\"textComment\" onChange={onChangeTextComment} ref={textRef} />\r\n                </div>\r\n                {loading && (\r\n                    <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <div >\r\n                    <input className=\"btn btn-primary btn-block\" type=\"submit\" value=\"send\" disabled={loading} />\r\n                </div>\r\n            </form >\r\n        </div >\r\n    );\r\n};\r\n\r\nCommentsByPost.propTypes = {\r\n    comments: PropTypes.array,\r\n    postId: PropTypes.number,\r\n    openComment: PropTypes.func\r\n};\r\n\r\nexport default CommentsByPost;","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport CommentsByPost from \"./CommentsByPost\";\r\nimport DisplayOnePost from \"./DisplayOnePost\";\r\n\r\nimport UserService from \"../services/user.service\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\n\r\nconst Post = () => {\r\n    const [post, setPost] = useState({});\r\n    const [commentsOpened, setCommentsOpened] = useState(false);\r\n    const [comments, setComments] = useState({});\r\n\r\n    const comRef = useRef();\r\n    const topRef = useRef();\r\n    const { postId } = useParams();\r\n    const location = useLocation();\r\n\r\n    const openComment = () => {\r\n        UserService.getCommentsByPost(postId)\r\n            .then((response) => {\r\n                setComments(response.data);\r\n                setCommentsOpened(!commentsOpened);\r\n                comRef.current.scrollIntoView();\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    const openCommentAfterAddComment = () => {\r\n        UserService.getCommentsByPost(post.id).then(\r\n            (response) => {\r\n                setComments(response.data);\r\n                comRef.current.scrollIntoView();\r\n            }\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        UserService.getPostById(postId)\r\n            .then((response) => {\r\n                setPost(response.data);\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n            });\r\n    }, [comments, postId]);\r\n\r\n    useEffect(() => {\r\n        location.commentsOpened && openComment();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [location.commentsOpened]);\r\n\r\n    return (\r\n        <div className=\"pt-3\" ref={topRef}>\r\n            <DisplayOnePost post={post} fullText={true} openComment={openComment} />\r\n            <div ref={comRef}>\r\n                {commentsOpened &&\r\n                    <div>\r\n                        <CommentsByPost comments={comments} postId={parseInt(postId, 10)} openComment={openCommentAfterAddComment} />\r\n                    </div>}\r\n            </div>\r\n        </div >\r\n\r\n    );\r\n};\r\n\r\nexport default Post;\r\n","import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport UserService from \"../services/user.service\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst AddTopic = () => {\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const [topicName, setTopicName] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const onChangeTopicName = (e) => {\r\n        const topicName = e.target.value;\r\n        setTopicName(topicName);\r\n    };\r\n\r\n    const onChangeDescription = (e) => {\r\n        const description = e.target.value;\r\n        setDescription(description);\r\n    };\r\n\r\n    const onSubmit = () => {\r\n        setLoading(true);\r\n        UserService.addTopic(topicName, description)\r\n            .then(() => {\r\n                history.push(\"/topics\");\r\n                window.location.reload();\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"topicName\">Name of topic</label>\r\n                    <input className=\"form-control\" type=\"text\" name=\"topicName\" onChange={onChangeTopicName}\r\n                        ref={register({ required: true, maxLength: 35 })} />\r\n                </div>\r\n                {errors.topicName && errors.topicName.type === \"required\" &&\r\n                    <div className=\"alert alert-danger\" role=\"alert\">\r\n                        < span> Name of topic cannot be empty</span>\r\n                    </div>\r\n                }\r\n                {errors.topicName && errors.topicName.type === \"maxLength\" &&\r\n                    <div className=\"alert alert-danger\" role=\"alert\">\r\n                        < span > Name of topic must not contain more than 35 characters</span>\r\n                    </div>\r\n                }\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"description\">Description</label>\r\n                    <textarea className=\"form-control\" type=\"textarea\" name=\"description\" onChange={onChangeDescription}\r\n                        rows=\"15\" ref={register({ required: true, maxLength: 255 })} />\r\n                </div>\r\n                {errors.description && errors.description.type === \"required\" &&\r\n                    <div className=\"alert alert-danger\" role=\"alert\">\r\n                        < span> Description cannot be empty</span>\r\n                    </div>\r\n                }\r\n                {errors.description && errors.description.type === \"maxLength\" &&\r\n                    <div className=\"alert alert-danger\" role=\"alert\">\r\n                        < span > Description must not contain more than 255 characters</span>\r\n                    </div>\r\n                }\r\n\r\n                <div className=\"form-group\">\r\n                    <input className=\"btn btn-primary btn-block\" type=\"submit\" value=\"send\" disabled={loading} />\r\n                </div>\r\n\r\n            </form >\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default AddTopic;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nconst Topics = () => {\r\n    const [content, setContent] = useState([]);\r\n    const [isHover, setIsHover] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        UserService.getTopics()\r\n            .then((response) => {\r\n                setContent(response.data);\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n            });\r\n    }, []);\r\n    const handleMouseEnter = (id) => {\r\n        setIsHover(id);\r\n    };\r\n    const handleMouseLeave = () => {\r\n        setIsHover(undefined);\r\n    };\r\n\r\n    return (\r\n        <div className=\"pt-3\" >\r\n            <div className=\"d-flex\">\r\n                <div>\r\n                    <Link to={\"/addPost\"} className=\"bg-dark text-light ml-1 p-2 rounded\">\r\n                        Add new post\r\n        </Link>\r\n                </div>\r\n                <div className=\"ml-auto mr-3\">\r\n                    <Link to={\"/addTopic\"} className=\"bg-dark text-light ml-5 p-2 rounded\">\r\n                        Add new topic\r\n        </Link>\r\n                </div>\r\n            </div>\r\n            {\r\n                Object.values(content).map((topic) => {\r\n                    return (\r\n                        <div className=\"mt-2\" key={topic.id}>\r\n\r\n                            <Link to={\"/topic/\" + topic.name + \"/posts\"}\r\n                                className=\"ml-0 font-weight-bold text-dark\">\r\n                                <span className=\"\" onMouseEnter={() => handleMouseEnter(topic.id)}\r\n                                    onMouseLeave={handleMouseLeave} >{topic.name}</span>\r\n                            </Link>\r\n                            <span className=\"ml-2 font-italic\">Number of posts in topic - {topic.numberOfPosts}</span>\r\n                            { isHover === topic.id && <div className=\"p-3 rounded bg-warning\">{topic.description}</div>}\r\n                            <hr className=\"bg-blue\"></hr>\r\n                        </div>\r\n                    );\r\n                })\r\n            }\r\n        </div >\r\n\r\n    );\r\n};\r\n\r\nexport default Topics;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport DisplayPosts from \"./DisplayPosts\";\r\nimport UserService from \"../services/user.service\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst PostsByUser = () => {\r\n    const [content, setContent] = useState([]);\r\n    const { username } = useParams();\r\n\r\n    useEffect(() => {\r\n        UserService.getPostsByUsername(username)\r\n            .then((response) => {\r\n                setContent(response.data.content);\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n            });\r\n    }, [username]);\r\n    //,[]\r\n    return (\r\n        <>\r\n            {}\r\n            <div className=\"pb-3\">\r\n                <span className=\"h3\">All posts by</span>\r\n                <span className=\"ml-2 font-weight-bold h2\">{content.length > 0 && Object.values(content)[0].username}</span>\r\n            </div>\r\n            <DisplayPosts posts={content} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PostsByUser;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\nimport DisplayOneComment from \"./DisplayOneComment\";\r\nimport UserService from \"../services/user.service.js\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst CommentsByUser = () => {\r\n    const [comments, setComments] = useState([]);\r\n    const { username } = useParams();\r\n\r\n    const refreshComments = useCallback(() => {\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        username &&\r\n            UserService.getCommentsByUser(username)\r\n                .then((response) => {\r\n                    setComments(response.data);\r\n                })\r\n                .catch((e) => {\r\n                    console.log(e);\r\n                });\r\n    }, [username, refreshComments]);\r\n\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <div className=\"pt-3\">\r\n                Comments of {username}\r\n            </div>\r\n            {Object.values(comments).map((comment) =>\r\n                <DisplayOneComment comment={comment} key={comment.id} openComment={refreshComments} textAbove={true}></DisplayOneComment>\r\n            )}\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default CommentsByUser;","import React, { useState, useEffect } from \"react\";\r\nimport DisplayPosts from \"./DisplayPosts\";\r\nimport UserService from \"../services/user.service\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst PostsByTopic = () => {\r\n    const [content, setContent] = useState([]);\r\n    const { topicName } = useParams();\r\n    //const [topicName] = useState((match));\r\n\r\n    useEffect(() => {\r\n        UserService.getPostsByTopic(topicName)\r\n            .then((response) => {\r\n                setContent(response.data.content);\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n            });\r\n    }, [topicName]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"pt-3\">\r\n                <span className=\"ml-2 font-weight-bold h2\">{!(Object.keys(content).length === 0 || content.constructor === Object) ?\r\n                    \"All posts in category \" + topicName :\r\n                    \"No posts in category \" + topicName\r\n                }\r\n                </span>\r\n            </div>\r\n            <DisplayPosts posts={content} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PostsByTopic;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { logout } from \"../actions/auth\";\r\nimport { clearMessage } from \"../actions/message\";\r\n\r\n//import { history } from \"../helpers/history\";\r\n\r\nconst NavBar = () => {\r\n    const [navCollapsed, setNavCollapsed] = useState(true);\r\n\r\n    const history = useHistory();\r\n    //const location = useLocation();\r\n    const { user: currentUser } = useSelector((state) => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        history.listen(() => {\r\n            dispatch(clearMessage()); // clear message when changing location\r\n        });\r\n    }, [history, dispatch]);\r\n\r\n    const logOut = (currentUser) => {\r\n        dispatch(logout(currentUser));\r\n    };\r\n    const onToggleNav = () => {\r\n        setNavCollapsed(!navCollapsed);\r\n    };\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg  navbar-dark bg-dark pl-0 pr-0 ml-0 mr-0\">\r\n            <Link to={\"/\"} className=\"navbar-brand  pl-0 pr-0 ml-2 mr-0\">sharestory</Link>\r\n\r\n            <button className=\"navbar-toggler pl-1 pr-1 ml-0 mr-0\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\"\r\n                aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" onClick={onToggleNav}>\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div className={(navCollapsed ? \"collapse \" : \"\") + \"navbar-collapse pl-0 pr-0 ml-3 mr-0\"} id=\"navbarNavAltMarkup\">\r\n                <div className=\"navbar-nav\">\r\n                    <Link to={\"/\"} className=\"nav-link\">\r\n                        Home\r\n                <span className=\"sr-only\">(current)</span>\r\n                    </Link>\r\n                    <Link to={\"/topics\"} className=\"nav-link \">\r\n                        Topics\r\n              </Link>\r\n\r\n                    {currentUser && (<>\r\n                        <Link to={\"/profile\"} className=\"nav-link\">\r\n                            Profile\r\n                        </Link>\r\n\r\n                    </>\r\n                    )}\r\n                </div>\r\n\r\n            </div>\r\n            {currentUser ?\r\n                (<>\r\n                    <Link to={\"/profile\"} className=\"nav-link text-secondary  pl-0 pr-0 ml-0 mr-0\">\r\n                        {currentUser.username}\r\n                    </Link>\r\n\r\n                    <Link to=\"/login\" className=\"nav-link text-secondary  pl-0 pr-0 ml-1 mr-2\" onClick={() => logOut(currentUser)}>\r\n                        Exit\r\n                    </Link>\r\n                </>)\r\n                :\r\n                (<>\r\n                    <Link to={\"/login\"} className=\"nav-link text-secondary\">\r\n                        Log In\r\n                    </Link>\r\n                    <Link to={\"/register\"} className=\"nav-link text-secondary\">\r\n                        Sign Up\r\n                    </Link>\r\n                </>)\r\n            }\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default NavBar;","import { SET_MESSAGE, CLEAR_MESSAGE } from \"./types\";\n\n\n\n\n\nexport const setMessage = (message) => ({\n  type: SET_MESSAGE,\n  payload: message,\n});\n\n\nexport const clearMessage = () => ({\n  type: CLEAR_MESSAGE,\n});\n","import { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();\n","import React from \"react\";\nimport { Router, Switch, Route } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Home from \"./components/Home\";\nimport Profile from \"./components/Profile\";\n\n\nimport AddPost from \"./components/AddPost\";\nimport Post from \"./components/Post\";\nimport AddTopic from \"./components/AddTopic\";\nimport Topics from \"./components/Topics\";\nimport PostsByUser from \"./components/PostsByUser\";\nimport CommentsByUser from \"./components/CommentsByUser\";\nimport PostsByTopic from \"./components/PostsByTopic\";\nimport Navbar from \"./components/Navbar\";\n\nimport { history } from \"./helpers/history\";\n\nconst App = () => {\n  return (\n    <Router history={history}>\n      <div id=\"app\" className=\"bg-light\" >\n        <Navbar />\n        <div className=\"container\">\n          <Switch>\n            <Route exact path={[\"/\", \"/home\"]} component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/profile\" component={Profile} />\n\n            <Route path=\"/addPost\" component={AddPost} />\n            <Route path=\"/Posts/:postId\" component={Post} />\n            <Route path=\"/addTopic\" component={AddTopic} />\n            <Route path=\"/Topics\" component={Topics} />\n            <Route path=\"/:username/posts\" component={PostsByUser} />\n            <Route path=\"/topic/:topicName/posts\" component={PostsByTopic} />\n            <Route path=\"/:username/comments\" component={CommentsByUser} />\n          </Switch>\n        </div>\n      </div>\n    </Router >\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can chađinge\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}